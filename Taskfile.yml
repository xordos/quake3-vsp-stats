version: '3'

vars:
  PHP_VERSION: 7.4.33
  COMPOSER: composer
  PHP: php

tasks:
  default:
    cmds:
      - task -l
    silent: true

  # Development tasks
  dev:start:
    desc: Start development environment
    cmds:
      - docker compose -f docker-compose.yml -f docker-compose.local.yml up -d db
      - task: dev:php

  dev:stop:
    desc: Stop development environment
    cmds:
      - docker compose -f docker-compose.yml -f docker-compose.local.yml stop db

  docker:build:
    desc: Build Docker images
    cmds:
      - docker build . -t evilru/quake3-vsp-stats:latest
  docker:start:
    desc: Start Docker containers
    cmds:
      - docker compose -f docker-compose.yml -f docker-compose.local.yml up -d {{.CLI_ARGS}}
  docker:stop:
    desc: Stop Docker containers
    cmds:
      - docker compose -f docker-compose.yml -f docker-compose.local.yml down

  dev:php:
    desc: Start PHP development server
    cmds:
      - "{{.PHP}} -S 0.0.0.0:8000 -t pub/"

  import-logs:baseq3:
    desc: Import baseq3 logs
    cmds:
      - "{{.PHP}} vsp.php -c pub/configs/cfg-default.php -l q3a -p savestate 1 baseq3.log"

  import-logs:xp:
    desc: Import xp logs
    cmds:
      - "{{.PHP}} vsp.php -c pub/configs/cfg-default.php -l q3a-xp -p savestate 1 xp.log"

  import-logs:osp:
    desc: Import osp logs
    cmds:
      - "{{.PHP}} vsp.php -c pub/configs/cfg-default.php -l q3a-osp -p savestate 1 osp.log"


  # Testing and quality tasks
  test:
    desc: Run all quality checks
    cmds:
      - task: test:unit
      - task: test:lint
      - task: test:cs
      - task: test:md

  test:unit:
    desc: Run PHPUnit tests
    env:
      XDEBUG_MODE: coverage
    cmds:
      - vendor/bin/phpunit

  test:lint:
    desc: Check PHP syntax
    cmds:
      - |
        for file in $(find . -name "*.php" -not -path "./vendor/*"); do
          {{.PHP}} -l "$file" || exit 1
        done

  test:cs:
    desc: Run PHP CodeSniffer
    cmds:
      - vendor/bin/phpcs --standard=PSR2 pub/ lib/

  test:md:
    desc: Run PHP Mess Detector
    cmds:
      - vendor/bin/phpmd src text codesize,unusedcode,naming,cleancode,design

  # Composer tasks
  composer:install:
    desc: Install dependencies
    cmds:
      - "{{.COMPOSER}} install"

  composer:update:
    desc: Update dependencies
    cmds:
      - "{{.COMPOSER}} update"

  # Maintenance tasks
  # clean:
  #   desc: Clean temporary files and logs
  #   cmds:
  #     - rm -rf tmp/*
  #     - rm -rf logdata/*.log
  #     - mkdir -p tmp/cache logdata
  #     - chmod -R 777 tmp logdata

  # logs:
  #   desc: Display application logs
  #   cmds:
  #     - tail -f logdata/*.log

